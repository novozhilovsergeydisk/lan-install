diff --git a/app/Http/Controllers/BrigadeController.php b/app/Http/Controllers/BrigadeController.php
index b9da836..dafebeb 100644
--- a/app/Http/Controllers/BrigadeController.php
+++ b/app/Http/Controllers/BrigadeController.php
@@ -71,12 +71,41 @@ public function index()
         }
     }
 
-    /**
-     * Store a newly created resource in storage.
-     */
+    public function create()
+    {
+        // Получаем список всех сотрудников
+        $employees = DB::select("SELECT id, fio FROM employees ORDER BY fio");
+
+        
+    }
+
     public function store(Request $request)
     {
-        //
+        $request->validate([
+            'name' => 'required|string|max:255',
+            'leader_id' => 'required|exists:employees,id',
+            'members' => 'required|array|min:1',
+            'members.*' => 'exists:employees,id',
+        ]);
+
+        // Вставка бригады
+        DB::insert("INSERT INTO brigades (name, leader_id) VALUES (?, ?)", [
+            $request->input('name'),
+            $request->input('leader_id'),
+        ]);
+
+        // Получаем ID только что вставленной бригады
+        $brigadeId = DB::getPdo()->lastInsertId();
+
+        // Вставка участников бригады
+        foreach ($request->input('members') as $memberId) {
+            DB::insert("INSERT INTO brigade_members (brigade_id, employee_id) VALUES (?, ?)", [
+                $brigadeId,
+                $memberId,
+            ]);
+        }
+
+        return redirect()->back()->with('success', 'Бригада успешно создана');
     }
 
     /**
diff --git a/resources/views/welcome.blade.php b/resources/views/welcome.blade.php
index 92a4b46..c98d05b 100644
--- a/resources/views/welcome.blade.php
+++ b/resources/views/welcome.blade.php
@@ -367,18 +367,17 @@ class="btn btn-sm btn-outline-success add-photo-btn"
                     </div>
 
                     <div class="tab-pane fade" id="teams" role="tabpanel">
+                        <!--
                         <div class="d-flex justify-content-between align-items-center mb-4">
                             <h4 class="mb-0">Бригады</h4>
                             <button type="button" class="btn btn-primary" id="createBrigadeBtn">
                                 <i class="bi bi-plus-circle"></i> Создать бригаду
                             </button>
-                        </div>
-
-                        <!-- Brigades List -->
-                        <div class="card">
+                        </div>-->
+                        
+                        <div class="card hide-me">
                             <div class="card-body">
                                 <div id="brigadesList" class="list-group">
-                                    <!-- Brigades will be loaded here -->
                                     <div class="text-center py-4">
                                         <div class="spinner-border text-primary" role="status">
                                             <span class="visually-hidden">Загрузка...</span>
@@ -388,15 +387,50 @@ class="btn btn-sm btn-outline-success add-photo-btn"
                                 </div>
                             </div>
                         </div>
+                        
 
-                        <!-- Brigade details modal is defined below in the file -->
+                        <form action="{{ route('brigades.store') }}" method="POST">
+                            @csrf
 
-                        <p>В этом разделе отображается информация о бригадах. Вы можете просматривать состав бригад,
-                            их загрузку и текущие задачи. Для каждой бригады доступна контактная информация
-                            ответственного лица.</p>
-                        <p>Используйте этот раздел для назначения заявок на бригады и контроля за выполнением работ.
-                            Вы можете фильтровать бригады по специализации или текущему статусу.</p>
-                    </div>
+                            <div class="mb-3">
+                                <label class="form-label">Название бригады</label>
+                                <input type="text" name="name" class="form-control" required>
+                            </div>
+
+                            <div class="mb-3">
+                                <label class="form-label">Бригадир</label>
+                                <select name="leader_id" class="form-select" required>
+                                    <option value="">-- Выберите бригадира --</option>
+                                    @foreach ($employees as $emp)
+                                        <option value="{{ $emp->id }}">{{ $emp->fio }}</option>
+                                    @endforeach
+                                </select>
+                            </div>  
+
+                            <div class="d-flex gap-3 mb-3" style="height: 450px;">
+                                <div class="d-flex flex-column" style="flex: 1;">
+                                    <label class="form-label">Состав бригады</label>
+                                    <select name="members[]" class="form-select h-100" multiple required>
+                                        @foreach ($employees as $emp)
+                                            <option value="{{ $emp->id }}">{{ $emp->fio }}</option>
+                                        @endforeach
+                                    </select>
+                                </div>
+
+                                <div class="d-flex flex-column" style="flex: 1;">
+                                    <label class="form-label">Выбранные сотрудники</label>
+                                    <div id="brigadeMembers" class="border rounded p-3 h-100 overflow-auto">
+                                        <!-- Здесь будет отображаться выбранный состав бригады -->
+                                    </div>
+                                </div>
+                            </div>
+
+                            <div class="mt-4">
+                                <button type="submit" class="btn btn-primary">Создать бригаду</button>
+                            </div>
+                        </form>
+
+                    </div>    
 
                     <div class="tab-pane fade" id="addresses" role="tabpanel">
                         <h4>Адреса</h4>
@@ -1118,7 +1152,7 @@ function updateCommentsBadge(requestId) {
                 <form id="newRequestForm">
                     @csrf
                     <div class="mb-3">
-                        <h6>Информация о клиенте</h6>
+                        <!-- <h6>Информация о клиенте</h6> -->
                         <div class="row g-3">
                             <div class="col-md-6">
                                 <label for="clientName" class="form-label">Контактное лицо <span
@@ -1134,7 +1168,7 @@ class="text-danger">*</span></label>
                     </div>
 
                     <div class="mb-3 hide-me">
-                        <h6>Детали заявки</h6>
+                        <!-- <h6>Детали заявки</h6> -->
                         <div class="row g-3">
                             <div class="col-md-6">
                                 <label for="requestType" class="form-label">Тип заявки <span
@@ -1154,7 +1188,7 @@ class="text-danger">*</span></label>
                     </div>
 
                     <div class="mb-3">
-                        <h6>Планирование</h6>
+                        <!-- <h6>Планирование</h6> -->
                         <div class="row g-3">
                             <div class="col-md-6">
                                 <label for="executionDate" class="form-label">Дата выполнения <span class="text-danger">*</span></label>
diff --git a/routes/web.php b/routes/web.php
index 8f35a52..4bdba35 100644
--- a/routes/web.php
+++ b/routes/web.php
@@ -9,10 +9,10 @@
 use App\Http\Controllers\RequestTeamFilterController;
 use App\Http\Controllers\GeoController;
 
-// Форма входа
-/*Route::get('/login', function () {
-    return 'Маршрут /login работает!';
-});*/
+Route::middleware(['auth'])->group(function () {
+    Route::get('/brigades/create', [BrigadeController::class, 'create'])->name('brigades.create');
+    Route::post('/brigades', [BrigadeController::class, 'store'])->name('brigades.store');
+});
 
 Route::get('/login', [LoginController::class, 'showLoginForm'])->name('login');
 Route::post('/login', [LoginController::class, 'login']);
@@ -60,7 +60,7 @@
 Route::prefix('api/requests')->middleware('auth')->group(function () {
     // Получить бригаду по ID бригадира за текущую дату
     Route::get('/brigade/by-leader/{leaderId}', [\App\Http\Controllers\ControllerRequestModification::class, 'getBrigadeByLeader']);
-    
+
     // Обновить бригаду у заявки
     Route::post('/update-brigade', [\App\Http\Controllers\ControllerRequestModification::class, 'updateRequestBrigade']);
 });
@@ -83,28 +83,28 @@
 Route::prefix('api')->middleware('auth')->group(function () {
     // Get addresses for select
     Route::get('/addresses', [HomeController::class, 'getAddresses'])->name('api.addresses');
-    
+
     // Get requests by date
     Route::get('/requests/date/{date}', [HomeController::class, 'getRequestsByDate'])->name('api.requests.by-date');
-    
+
     // Get request types
     Route::get('/request-types', [HomeController::class, 'getRequestTypes'])->name('api.request-types');
-    
+
     // Get request statuses
     Route::get('/request-statuses', [HomeController::class, 'getRequestStatuses'])->name('api.request-statuses');
-    
+
     // Get brigades
     Route::get('/brigades', [BrigadeController::class, 'index'])->name('api.brigades');
-    
+
     // Get operators
     Route::get('/operators', [HomeController::class, 'getOperators'])->name('api.operators');
-    
+
     // Get cities
     Route::get('/cities', [HomeController::class, 'getCities'])->name('api.cities');
-    
+
     // Create new request
     Route::post('/requests', [HomeController::class, 'storeRequest'])->name('api.requests.store');
-    
+
     // Get comments count for request
     Route::get('/requests/{request}/comments/count', [HomeController::class, 'getCommentsCount'])
         ->name('api.requests.comments.count');
