diff --git a/public/js/handler.js b/public/js/handler.js
index 224d16c..403f9a0 100644
--- a/public/js/handler.js
+++ b/public/js/handler.js
@@ -763,7 +763,7 @@ function getAllBrigadeMembers() {
 function validateBrigadeMembers() {
     // Обновляем данные перед валидацией
     const members = getAllBrigadeMembers();
-    const leaderId = document.querySelector('select[name="leader_id"]')?.value;
+    const leaderId = document.getElementById('brigadeLeader')?.value;
 
     // Обновляем скрытое поле с данными
     let hiddenField = document.getElementById('brigade_members_data');
@@ -917,111 +917,8 @@ function initializePage() {
 
                         const employees = await response.json();
 
-                        // Обновляем select бригадира
-                        const brigadeLeaderSelect = document.getElementById('brigadeLeader');
-                        if (brigadeLeaderSelect) {
-                            // Сохраняем текущее выбранное значение
-                            const currentLeader = brigadeLeaderSelect.value;
-
-                            // Очищаем список, оставляя только первый элемент
-                            while (brigadeLeaderSelect.options.length > 1) {
-                                brigadeLeaderSelect.remove(1);
-                            }
-
-                            // Добавляем сотрудников
-                            employees.forEach(emp => {
-                                const option = new Option(emp.fio, emp.id, false, false);
-                                brigadeLeaderSelect.add(option);
-                            });
-
-                            // Восстанавливаем выбранное значение, если оно есть в новом списке
-                            if (currentLeader && Array.from(brigadeLeaderSelect.options).some(opt => opt.value === currentLeader)) {
-                                brigadeLeaderSelect.value = currentLeader;
-                            }
-
-                            // Обработчик изменения выбранного бригадира
-                            brigadeLeaderSelect.addEventListener('change', function() {
-                                const selectedLeaderId = this.value;
-
-                                const selectedLeaderName = this.options[this.selectedIndex].textContent;
-
-                                console.log('selectedLeaderName :', selectedLeaderName);
-
-                                // Обновляем скрытое поле leader_id сразу
-                                const leaderIdInput = document.querySelector('input[name="leader_id"]');
-                                if (leaderIdInput) {
-                                    leaderIdInput.value = selectedLeaderId;
-                                }
-
-                                if (!selectedLeaderId) {
-                                    updateBrigadeMembersFormField();
-                                    return;
-                                }
-
-                                // Находим контейнер с участниками бригады
-                                const brigadeMembersContainer = document.getElementById('brigadeMembers');
-                                if (!brigadeMembersContainer) {
-                                    console.error('Элемент #brigadeMembers не найден');
-                                    return;
-                                }
-
-                                // Проверяем, есть ли уже этот участник в списке
-                                const existingMember = brigadeMembersContainer.querySelector(`[data-employee-id="${selectedLeaderId}"]`);
-
-                                // Если участника еще нет в списке, добавляем его
-                                if (!existingMember) {
-                                    const leaderData = this.options[this.selectedIndex].dataset;
-
-                                    const leaderName = leaderData.fullName || `Бригадир ${selectedLeaderId}`;
-
-                                    // Создаем элемент для отображения участника
-                                    const memberElement = document.createElement('div');
-                                    memberElement.className = 'd-flex justify-content-between align-items-center mb-2';
-                                    memberElement.dataset.employeeId = selectedLeaderId;
-                                    memberElement.dataset.isLeader = 'true';
-
-                                    // Добавляем имя участника
-                                    const nameSpan = document.createElement('span');
-                                    nameSpan.textContent = selectedLeaderName + ' (Бригадир)';
-                                    memberElement.appendChild(nameSpan);
-
-                                    // Добавляем кнопку удаления
-                                    const deleteButton = document.createElement('button');
-                                    deleteButton.className = 'btn btn-sm btn-outline-danger';
-                                    deleteButton.innerHTML = '&times;';
-                                    deleteButton.onclick = function(e) {
-                                        e.preventDefault();
-                                        memberElement.remove();
-                                        updateBrigadeMembersFormField();
-                                    };
-                                    memberElement.appendChild(deleteButton);
-
-                                    // Добавляем участника в начало списка
-                                    brigadeMembersContainer.insertBefore(memberElement, brigadeMembersContainer.firstChild);
-                                }
-
-                                // Обновляем данные формы и валидацию
-                                updateBrigadeMembersFormField();
-                            });
-                            // Сохраняем текущее выбранное значение
-                            const currentBrigadeLeader = brigadeLeaderSelect.value;
-
-                            // Очищаем список, оставляя только первый элемент
-                            while (brigadeLeaderSelect.options.length > 1) {
-                                brigadeLeaderSelect.remove(1);
-                            }
-
-                            // Добавляем сотрудников
-                            employees.forEach(emp => {
-                                const option = new Option(emp.fio, emp.id, false, false);
-                                brigadeLeaderSelect.add(option);
-                            });
-
-                            // Восстанавливаем выбранное значение, если оно есть в новом списке
-                            if (currentLeader && Array.from(brigadeLeaderSelect.options).some(opt => opt.value === currentLeader)) {
-                                brigadeLeaderSelect.value = currentLeader;
-                            }
-                        }
+                        // Больше не обновляем select бригадира, так как теперь это скрытое поле
+                        // Бригадир выбирается кликом по участнику в списке
 
                         // Обновляем multiple select сотрудников
                         const employeesSelect = document.getElementById('employeesSelect');
@@ -2577,72 +2474,95 @@ function handleFormErrors(form, response, data) {
     }
 }
 
-    /**
-     * Обрабатывает успешное сохранение формы
-     * @param {HTMLFormElement} form - Элемент формы
-     */
-    function handleFormSuccess(form) {
-        // Успешное сохранение
-        showAlert('Данные сотрудника успешно сохранены', 'success');
-
-        // Обновляем таблицу сотрудников
-        if (window.loadEmployees) {
-            loadEmployees();
-        }
+/**
+ * Обрабатывает успешное сохранение формы
+ * @param {HTMLFormElement} form - Элемент формы
+ */
+function handleFormSuccess(form) {
+    // Успешное сохранение
+    showAlert('Данные сотрудника успешно сохранены', 'success');
 
-        // Сбрасываем форму
-        form.reset();
+    // Обновляем таблицу сотрудников
+    if (window.loadEmployees) {
+        loadEmployees();
     }
 
-    // Обработчик для кнопки "Изменить"
-    const editBtn = document.getElementById('editBtn');
-    if (editBtn) {
-        editBtn.addEventListener('click', function () {
-            // Разблокируем поля для редактирования
-            document.querySelectorAll('form input, form select').forEach(input => {
-                input.readOnly = false;
-            });
+    // Сбрасываем форму
+    form.reset();
+}
 
-            // Показываем кнопку "Сохранить" и скрываем "Изменить"
-            this.classList.add('d-none');
-            document.getElementById('saveBtn').classList.remove('d-none');
+// Обработчик для кнопки "Изменить"
+const editBtn = document.getElementById('editBtn');
+if (editBtn) {
+    editBtn.addEventListener('click', function () {
+        // Разблокируем поля для редактирования
+        document.querySelectorAll('form input, form select').forEach(input => {
+            input.readOnly = false;
         });
-    }
 
-    // Add event listener for the save button
-    const saveBtn = document.getElementById('saveBtn');
-    if (saveBtn) {
-        saveBtn.addEventListener('click', function() {
-            // console.log('Save button clicked');
-            const form = document.querySelector('form#employeeForm');
-            if (form) {
-                const submitEvent = new Event('submit', {
-                    bubbles: true,
-                    cancelable: true
-                });
-                form.dispatchEvent(submitEvent);
-            }
-        });
-    }
+        // Показываем кнопку "Сохранить" и скрываем "Изменить"
+        this.classList.add('d-none');
+        document.getElementById('saveBtn').classList.remove('d-none');
+    });
+}
+
+// Add event listener for the save button
+const saveBtn = document.getElementById('saveBtn');
+if (saveBtn) {
+    saveBtn.addEventListener('click', function() {
+        // console.log('Save button clicked');
+        const form = document.querySelector('form#employeeForm');
+        if (form) {
+            const submitEvent = new Event('submit', {
+                bubbles: true,
+                cancelable: true
+            });
+            form.dispatchEvent(submitEvent);
+        }
+    });
+}
 
+// Обработчик добавления сотрудника в бригаду
 function hanlerAddToBrigade() {
     document.getElementById('addToBrigadeBtn').addEventListener('click', function () {
         const select = document.getElementById('employeesSelect');
         const brigadeMembers = document.getElementById('brigadeMembers');
         const selectedOptions = Array.from(select.selectedOptions);
 
+        console.log('selectedOptions', selectedOptions);
+
+        // return;
+
         if (selectedOptions.length > 0) {
             selectedOptions.forEach(option => {
                 // Проверяем, не является ли добавляемый сотрудник уже бригадиром
-                const leaderSelect = document.querySelector('select[name="leader_id"]');
-                if (leaderSelect && leaderSelect.value === option.value) {
+                const leaderInput = document.getElementById('brigadeLeader');
+                if (leaderInput && leaderInput.value === option.value) {
                     showAlert('Этот сотрудник уже является бригадиром', 'warning');
                     option.selected = false;
                     return; // Пропускаем добавление, если это бригадир
                 }
                 // Создаем элемент для отображения сотрудника
                 const memberDiv = document.createElement('div');
+                memberDiv.setAttribute('data-employee-id', option.value);
                 memberDiv.className = 'd-flex justify-content-between align-items-center p-2 mb-2 border rounded';
+                
+                // Добавляем обработчик клика для выбора бригадира
+                memberDiv.addEventListener('click', function() {
+                    // Убираем класс у всех элементов
+                    document.querySelectorAll('#brigadeMembers > div').forEach(div => {
+                        div.classList.remove('brigade-leader');
+                    });
+                    
+                    // Добавляем класс текущему элементу
+                    this.classList.add('brigade-leader');
+                    
+                    // Обновляем значение в скрытом поле для бригадира
+                    const leaderInput = document.getElementById('brigadeLeader');
+                    if (leaderInput) {
+                        leaderInput.value = this.getAttribute('data-employee-id');
+                    }
+                });
 
                 // Добавляем имя сотрудника
                 const nameSpan = document.createElement('span');
@@ -2663,7 +2583,7 @@ function hanlerAddToBrigade() {
                 hiddenInput.type = 'hidden';
                 hiddenInput.name = 'brigade_members[]';
                 hiddenInput.value = option.value;
-                hiddenInput.dataset.employeeId = option.dataset.employeeId; // Добавляем data-employee-id
+                // hiddenInput.setAttribute('data-employee-id', option.dataset.employeeId);
 
                 // Собираем всё вместе
                 memberDiv.appendChild(hiddenInput);
@@ -2686,18 +2606,16 @@ function hanlerAddToBrigade() {
     });
 }
 
+// Обработчик создания бригады
 function handlerCreateBrigade() {
     // console.log('Инициализация handlerCreateBrigade...');    
     const createBtn = document.getElementById('createBrigadeBtn');
 
-    // console.log('Найдена кнопка createBrigadeBtn:', !!createBtn);
-
     if (createBtn) {
         createBtn.addEventListener('click', async function (e) {
-            // console.log('Кнопка нажата!');
             e.preventDefault();
-            // console.clear();
-            // console.log('Начало обработки клика...');
+            console.clear();
+            console.log('Начало обработки клика...');
 
             // Получаем данные формы
             const form = document.getElementById('brigadeForm');
@@ -2708,16 +2626,16 @@ function handlerCreateBrigade() {
 
             // Обновляем данные бригады перед отправкой
             const members = getAllBrigadeMembers();
-            const leaderId = document.querySelector('select[name="leader_id"]')?.value;
+            const leaderId = document.getElementById('brigadeLeader')?.value;
 
             // Проверяем валидность
             if (!leaderId) {
-                showAlert('Пожалуйста, выберите бригадира', 'warning');
+                showAlert('Пожалуйста, выберите бригадира, кликнув по участнику в списке', 'warning');
                 return;
             }
 
-            if (members.length < 2) {
-                showAlert('В бригаде должно быть минимум 2 участника', 'warning');
+            if (members.length < 1) {
+                showAlert('В бригаде должен быть хотя бы 1 участник', 'warning');
                 return;
             }
 
@@ -2785,6 +2703,13 @@ function handlerCreateBrigade() {
             // Получаем данные о членах бригады
             const brigadeMembersData = JSON.parse(formValues.brigade_members_data || '[]');
 
+            console.log('brigadeMembersData', brigadeMembersData );
+
+            // return;
+
+            // Используем существующую переменную leaderId вместо объявления новой
+            // const leaderId = 37;
+
             // Формируем данные для логирования
             const formJson = {
                 formData: formValues,
@@ -2806,9 +2731,9 @@ function handlerCreateBrigade() {
                 return;
             }
 
-            // Проверяем, что в бригаде минимум 2 участника (включая бригадира)
-            if (formJson.members.length < 2) {
-                showAlert('В бригаде должно быть минимум 2 участника (включая бригадира)', 'warning');
+            // Проверяем, что в бригаде есть хотя бы 1 участник
+            if (formJson.members.length < 1) {
+                showAlert('В бригаде должен быть хотя бы 1 участник', 'warning');
                 return;
             }
 
@@ -2818,13 +2743,20 @@ function handlerCreateBrigade() {
             );
 
             // Если бригадира нет в списке участников, добавляем его
-            if (!leaderInMembers && formValues.leader_id) {
-                formJson.members.push({
-                    employee_id: formValues.leader_id,
-                    is_leader: true
-                });
+            // if (!leaderInMembers && formValues.leader_id) {
+            //     formJson.members.push({
+            //         employee_id: formValues.leader_id,
+            //         is_leader: true
+            //     });
+            // }
+            
+            // Проверяем, что выбран бригадир
+            const brigadierSelected = document.querySelector('#brigadeMembers .brigade-leader');
+            if (!brigadierSelected) {
+                showAlert('Пожалуйста, выберите бригадира, кликнув по участнику в списке', 'warning');
+                return;
             }
-
+            
             showAlert('Данные формы успешно обработаны!', 'success');
 
             // Функция для загрузки списка бригад
@@ -2939,11 +2871,11 @@ function handlerCreateBrigade() {
                             const header = document.createElement('div');
                             header.className = 'd-flex justify-content-between align-items-center mb-3';
                             header.innerHTML = `
-                    <h5 class="mb-0">Список бригад</h5>
-                    <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#createBrigadeModal">
-                        <i class="bi bi-plus-circle"></i> Новая бригада
-                    </button>
-                `;
+                                <h5 class="mb-0">Список бригад</h5>
+                                <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#createBrigadeModal">
+                                    <i class="bi bi-plus-circle"></i> Новая бригада
+                                </button>
+                            `;
                             brigadesList.prepend(header);
                         }
 
@@ -2979,33 +2911,6 @@ function handlerCreateBrigade() {
                 }
             });
 
-            // Функция для отправки данных на сервер
-            /*
-                {_token: 'WhlfBIUMYIRpxc1zBMiLWo6yiq9k4QOqt5lNdo5f', name: 'Бригада технической интеграции видеосистем', leader_id: '34', brigade_members: Array(1), members: Array(1)}
-                brigade_members
-                :
-                Array(1)
-                0
-                :
-                "34"
-                length
-                :
-                1
-                [[Prototype]]
-                :
-                Array(0)
-                leader_id
-                :
-                "34"
-                members
-                :
-                Array(1)
-                0: 34
-
-                Array(0)
-                name: "Бригада технической интеграции видеосистем"
-                _token: "WhlfBIUMYIRpxc1zBMiLWo6yiq9k4QOqt5lNdo5f"
-            */
             const createBrigade = async () => {
                 try {
                     // console.log('Отправка запроса на создание бригады...');
@@ -3097,6 +3002,8 @@ function handlerCreateBrigade() {
             // Вызываем функцию создания бригады
             createBrigade();
 
+            console.log('Бригада успешно создана!');
+
             // Для отправки формы раскомментируйте строку ниже
             // form.submit();
         });
diff --git a/resources/views/welcome.blade.php b/resources/views/welcome.blade.php
index ec7cf91..a0b6b30 100644
--- a/resources/views/welcome.blade.php
+++ b/resources/views/welcome.blade.php
@@ -7,6 +7,26 @@
     <title>Система управления заявками</title>
     <style>
         /* Стили для выпадающего списка адресов */
+        
+        /* Стиль для выделения бригадира */
+        .brigade-leader {
+            border: 2px solid #dc3545 !important;
+            position: relative;
+        }
+        
+        .brigade-leader::after {
+            content: 'Бригадир';
+            position: absolute;
+            top: 18px;
+            left: 50%;
+            transform: translateX(-50%); /* центрирование по горизонтали */
+            font-size: 12px;
+            background-color: #dc3545;
+            color: white;
+            padding: 0 5px;
+            border-radius: 3px;
+            white-space: nowrap; /* предотвращаем перенос текста */
+        }
     </style>
     <!-- Bootstrap 5 CSS -->
     <link href="{{ asset('css/bootstrap.css') }}" rel="stylesheet">
@@ -436,18 +456,11 @@ class="btn btn-sm btn-outline-success add-photo-btn"
                             <div class="mb-3">
                                 <label class="form-label">Название бригады</label>
                                 <input type="text" id="brigadeName" name="name" class="form-control"
-                                       value="Бригада технической интеграции видеосистем" required>
+                                       value="Бригада" required>
                             </div>
 
-                            <div class="mb-3">
-                                <label class="form-label">Бригадир</label>
-                                <select id="brigadeLeader" name="leader_id" class="form-select" required>
-                                    <option value="">-- Выберите бригадира --</option>
-                                    @foreach ($employees as $emp)
-                                        <option value="{{ $emp->id }}">{{ $emp->fio }}</option>
-                                    @endforeach
-                                </select>
-                            </div>
+                            <!-- Бригадир выбирается кликом по участнику в списке -->
+                            <input type="hidden" id="brigadeLeader" name="leader_id" value="">
 
                             <div class="d-flex gap-3 mb-3" style="height: 450px;">
                                 <div class="d-flex flex-column" style="flex: 1.2;">
