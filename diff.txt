diff --git a/app/Http/Controllers/HomeController.php b/app/Http/Controllers/HomeController.php
index 71e5859..1c64819 100644
--- a/app/Http/Controllers/HomeController.php
+++ b/app/Http/Controllers/HomeController.php
@@ -6,6 +6,7 @@
 use Illuminate\Support\Facades\Validator;
 use Illuminate\Support\Facades\DB;
 use Illuminate\Support\Facades\Auth;
+use App\Http\Controllers\RequestTeamFilterController;
 
 class HomeController extends Controller
 {
@@ -17,7 +18,7 @@ class HomeController extends Controller
     public function getAddresses()
     {
         $sql = "
-            SELECT 
+            SELECT
                 a.id,
                 CONCAT(a.street, ', ', a.houses, ' [', CASE WHEN a.district = 'Не указан' THEN 'Район не указан' ELSE a.district END, '][', c.name, ']') as full_address,
                 a.street,
@@ -28,12 +29,12 @@ public function getAddresses()
             JOIN cities c ON a.city_id = c.id
             ORDER BY a.street, a.houses
         ";
-        
+
         $addresses = DB::select($sql);
-            
+
         return response()->json($addresses);
     }
-    
+
     public function index()
     {
         // Получаем текущего пользователя
@@ -118,6 +119,12 @@ public function index()
         // Запрашиваем request_types
         $requests_types = DB::select('SELECT * FROM request_types ORDER BY id');
 
+        $today = now()->toDateString();
+
+        $sql = "SELECT e.id, b.id as brigade_id, e.fio AS leader_name, e.id as employee_id FROM brigades AS b JOIN employees AS e ON b.leader_id = e.id WHERE DATE(b.formation_date) >= '{$today}'";
+
+        $brigadesCurrentDay = DB::select($sql);
+
         // 🔽 Комплексный запрос получения списка заявок с подключением к employees
         $requests = DB::select('
             SELECT
@@ -173,6 +180,7 @@ public function index()
             'request_addresses' => $request_addresses,
             'requests_types' => $requests_types,
             'brigadeMembersWithDetails' => $brigadeMembersWithDetails,
+            'brigadesCurrentDay' => $brigadesCurrentDay,
             'flags' => $flags
         ];
 
@@ -193,10 +201,10 @@ public function addComment(Request $request)
             'json' => $request->json()->all(),
             'headers' => $request->headers->all(),
         ]);
-        
+
         // Включаем логирование SQL-запросов
         \DB::enableQueryLog();
-        
+
         try {
             \Log::info('=== НАЧАЛО ДОБАВЛЕНИЯ КОММЕНТАРИЯ ===');
             \Log::info('Метод запроса: ' . $request->method());
@@ -791,7 +799,7 @@ public function storeRequest(Request $request)
         \DB::enableQueryLog();
         DB::beginTransaction();
         $isExistingClient = false;
-        
+
         try {
             // Логируем все входные данные для отладки
             \Log::info('=== НАЧАЛО ОБРАБОТКИ ЗАПРОСА ===');
@@ -799,7 +807,7 @@ public function storeRequest(Request $request)
 
             // Получаем данные из запроса
             $input = $request->all();
-            
+
             // Формируем массив для валидации
             $validationData = [
                 'client_name' => $input['client_name'] ?? null,
@@ -830,7 +838,7 @@ public function storeRequest(Request $request)
 
             // Валидация входных данных
             $validator = \Validator::make($validationData, $rules);
-            
+
             if ($validator->fails()) {
                 \Log::error('Ошибка валидации:', $validator->errors()->toArray());
                 return response()->json([
@@ -839,27 +847,27 @@ public function storeRequest(Request $request)
                     'errors' => $validator->errors()
                 ], 422);
             }
-            
+
             $validated = $validator->validated();
             \Log::info('Валидированные данные:', $validated);
 
             // 1. Подготовка данных клиента
             $fio = trim($validated['client_name'] ?? '');
             $phone = trim($validated['client_phone'] ?? '');
-            
+
             // 2. Валидация данных клиента
             $clientData = [
                 'fio' => $fio,
                 'phone' => $phone,
                 'email' => '' // Пустая строка, так как поле не может быть NULL
             ];
-            
+
             $clientRules = [
                 'fio' => 'string|max:255',
                 'phone' => 'string|max:50',
                 'email' => 'string|max:255'
             ];
-            
+
             $clientValidator = Validator::make($clientData, $clientRules);
             if ($clientValidator->fails()) {
                 \Log::error('Ошибка валидации данных клиента:', $clientValidator->errors()->toArray());
@@ -869,17 +877,17 @@ public function storeRequest(Request $request)
                     'errors' => $clientValidator->errors()
                 ], 422);
             }
-            
+
             // 3. Поиск существующего клиента по телефону (если телефон указан)
             $client = null;
             $clientId = null;
-            
+
             if (!empty($clientData['phone'])) {
                 $client = DB::table('clients')
                     ->where('phone', $clientData['phone'])
                     ->first();
             }
-            
+
             // 4. Создание или обновление клиента
             try {
                 if ($client) {
@@ -923,17 +931,17 @@ public function storeRequest(Request $request)
                 'created_at' => now(),
                 'updated_at' => now()
             ];
-            
+
             // Генерируем номер заявки
             $countQuery = DB::table('requests');
             $count = $countQuery->count() + 1;
             $requestNumber = 'REQ-' . date('Ymd') . '-' . str_pad($count, 4, '0', STR_PAD_LEFT);
             $requestData['number'] = $requestNumber;
-            
+
             // Устанавливаем текущую дату (учитывая часовой пояс из конфига Laravel)
             $currentDate = now()->toDateString();
             $requestData['request_date'] = $currentDate;
-            
+
             // Вставляем заявку с помощью DB::insert и получаем ID
             $result = DB::select(
                 'INSERT INTO requests (client_id, request_type_id, status_id, execution_date, execution_time, brigade_id, operator_id, number, request_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id',
@@ -958,7 +966,7 @@ public function storeRequest(Request $request)
 
             $requestId = $result[0]->id;
             \Log::info('Создана заявка с ID:', ['id' => $requestId]);
-            
+
             // 4. Создаем комментарий, только если он не пустой
             $commentText = trim($validated['comment'] ?? '');
             $newCommentId = null;
@@ -982,14 +990,14 @@ public function storeRequest(Request $request)
                     }
 
                     \Log::info('Создан комментарий с ID:', ['id' => $newCommentId]);
-                    
+
                     // Создаем связь между заявкой и комментарием
                     DB::table('request_comments')->insert([
                         'request_id' => $requestId,
                         'comment_id' => $newCommentId,
                         'created_at' => now()->toDateTimeString()
                     ]);
-                    
+
                     \Log::info('Связь между заявкой и комментарием создана', [
                         'request_id' => $requestId,
                         'comment_id' => $newCommentId
@@ -1002,30 +1010,30 @@ public function storeRequest(Request $request)
 
             // 5. Связываем существующий адрес с заявкой
             $addressId = $validated['address_id'];
-            
+
             // Получаем информацию об адресе
             $address = DB::table('addresses')->find($addressId);
-            
+
             if (!$address) {
                 throw new \Exception('Указанный адрес не найден');
             }
-            
+
             // Связываем адрес с заявкой без использования временных меток
             DB::table('request_addresses')->insert([
                 'request_id' => $requestId,
                 'address_id' => $addressId
                 // Убраны created_at и updated_at, так как их нет в таблице
             ]);
-            
+
             \Log::info('Создана связь заявки с адресом:', [
                 'request_id' => $requestId,
                 'address_id' => $addressId
             ]);
-            
+
             // Формируем ответ
             $response = [
                 'success' => true,
-                'message' => $clientId 
+                'message' => $clientId
                     ? ($isExistingClient ? 'Использован существующий клиент' : 'Создан новый клиент')
                     : 'Заявка создана без привязки к клиенту',
                 'data' => [
@@ -1075,7 +1083,7 @@ public function storeRequest(Request $request)
                 'line' => $e->getLine(),
                 'trace' => $e->getTraceAsString()
             ]);
-            
+
             return response()->json([
                 'success' => false,
                 'message' => 'Ошибка при создании заявки: ' . $e->getMessage(),
diff --git a/app/Http/Controllers/RequestTeamFilterController.php b/app/Http/Controllers/RequestTeamFilterController.php
index fe9b1fe..1bbb204 100644
--- a/app/Http/Controllers/RequestTeamFilterController.php
+++ b/app/Http/Controllers/RequestTeamFilterController.php
@@ -46,6 +46,25 @@ public function filterByTeams(Request $request)
         ]);
     }
 
+    /**
+     * Получить список бригад за текущий день
+     */
+    public function brigadesCurrentDay()
+    {
+        $today = now()->toDateString();
+
+        $sql = "SELECT e.id, b.id as brigade_id, e.fio AS name FROM brigades AS b JOIN employees AS e ON b.leader_id = e.id WHERE DATE(b.formation_date) >= '{$today}'";
+
+        $leaders = DB::select($sql);
+
+        return response()->json([
+            'success' => true,
+            '$today' => $today,
+            '$sql' => $sql,
+            '$leaders' => $leaders
+        ]);
+    }
+
     /**
      * Получить список бригадиров
      */
diff --git a/public/js/handler.js b/public/js/handler.js
index a8d5af9..4ca0d61 100644
--- a/public/js/handler.js
+++ b/public/js/handler.js
@@ -1448,12 +1448,12 @@ function setupBrigadeAttachment() {
                             const checkedCheckbox = document.querySelector('input[type="checkbox"].request-checkbox:checked');
 
                             if (!select.value) {
-                                console.log('Бригадир не выбран!');
+                                showAlert('Бригада не выбрана!');
                                 return;
                             }
 
                             if (!checkedCheckbox) {
-                                console.log('Не выбрана ни одна заявка!');
+                                showAlert('Не выбрана ни одна заявка!');
                                 return;
                             }
 
diff --git a/resources/views/welcome.blade.php b/resources/views/welcome.blade.php
index 604185d..3ee220f 100644
--- a/resources/views/welcome.blade.php
+++ b/resources/views/welcome.blade.php
@@ -128,7 +128,7 @@
                         <!-- Filter Section -->
                         <div class="mb-3">
                             <div class="d-flex justify-content-between align-items-center">
-                                <div class="d-flex" style="max-width: 100%;">
+                                <div class="d-flex d-none" style="max-width: 100%;">
                                     <div id="request-filters" class="d-flex align-items-center"
                                          style="height: 2rem; border: 1px solid var(--card-border, #dee2e6); border-radius: 0.25rem 0 0 0.25rem; padding: 0 0.5rem; background-color: var(--card-bg, #ffffff);">
                                         <!-- <label class="me-2 mb-0">Фильтр заявок по:</label> -->
@@ -147,10 +147,13 @@
                                         <i class="bi bi-arrow-counterclockwise me-1"></i>Сброс
                                     </button>
                                 </div>
-                                <button type="button" class="btn btn-primary" id="new-request-button"
-                                        data-bs-toggle="modal" data-bs-target="#newRequestModal">
-                                    <i class="bi bi-plus-circle me-1"></i>Новая заявка
-                                </button>
+
+                                <div class="d-flex justify-content-end" style="flex: 1;">
+                                    <button type="button" class="btn btn-primary" id="new-request-button"
+                                            data-bs-toggle="modal" data-bs-target="#newRequestModal">
+                                        <i class="bi bi-plus-circle me-1"></i>Новая заявка
+                                    </button>
+                                </div>
                             </div>
                         </div>
 
@@ -159,14 +162,18 @@
                             <button type="button" class="btn btn-outline-secondary btn-sm mb-3 me-2" id="btn-open-calendar">
                                 <i class="bi bi-calendar me-1"></i>Календарь
                             </button>
+
                             <div id="status-buttons" class="d-flex flex-wrap gap-2  hide-me">
                                 <!-- Кнопки статусов будут добавлены через JavaScript -->
                             </div>
+
                             <!-- Контейнер для выбора бригады -->
-                            <div id="brigade-leader-filter" class="ms-3 d-none">
+                            <div id="brigade-leader-filter" class="ms-3 d-none_">
                                 <select id="brigade-leader-select" class="form-select form-select-sm" style="width: 250px; margin-top: -12px;">
                                     <option value="" selected disabled>Выберите бригаду...</option>
-                                    <!-- Список бригадиров будет добавлен через JavaScript -->
+                                    @foreach ($brigadesCurrentDay as $brigade)
+                                        <option value="{{ $brigade->employee_id }}" data-brigade-id="{{ $brigade->brigade_id }}">{{ $brigade->leader_name }}</option>
+                                    @endforeach
                                 </select>
                             </div>
                         </div>
@@ -204,8 +211,7 @@
                                     <th style="width: 15rem;">Адрес/Телефон</th>
                                     <th>Оператор/Создана</th>
                                     <th>Бригада</th>
-                                    <th style="width: 16rem;">Действия с заявкой</th>
-                                    <th style="width: 12rem;">Действия</th>
+                                    <th style="width: 16rem;" colspan="2">Действия с заявкой</th>
                                 </tr>
                                 </thead>
                                 <tbody>
